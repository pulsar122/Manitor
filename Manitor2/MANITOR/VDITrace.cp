#include "Manitor.h"#include "ReturnTrace.h"#include "VDITrace.h"#include <xbios.h>#include <stdlib.h>#include <string.h>void Output_VDIReturn(VDIReturnInfo *info){	static char nr[12];	itoa(info->opcode, nr, 10);	log->fill_string(">VDI#");	log->fill_string(nr);	log->fill(" => ", 4);	log->fill_crlf();}void CDECL VDICallTrace(VDIPB *para, int16 *call_original, int16 super_called){#pragma unused(call_original)	static char nr[8];	ENTER_CALLBACK();// Anstehende Return-Ausgaben tŠtigen:	Output_Returns();// Jetzt diesen Call ausgeben:	Output_Prefix(my_200Hz, *p_run);	log->fill(super_called ? "S" : " ", 1);	log->fill_string(" VDI#");	itoa(para->contrl[0], nr, 10);	log->fill_string(nr);	log->fill_crlf();	if (update_immediate) {		log->update();	}	EXIT_CALLBACK();}void CDECL VDIReturnTrace(VDIPB *para, int16 is_super){	ENTER_CALLBACK();	VDIReturnInfo *gret = (VDIReturnInfo *)begin_layer_table_entry(&vdireturn_info_table.table, TRAPPER_VDI, is_super);	if (gret) {		gret->opcode = para->contrl[0];	}	end_layer_table_entry(is_super);	EXIT_CALLBACK();}