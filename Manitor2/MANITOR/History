Manitor History (umgekehrte Reihenfolge)
===============

29.6.1999:
---------

• Bug in Trapper gefunden.

• Manitor mal neu compiliert (und geringfügig an Änderungen meiner Libs angepaßt).

1.2.1999:
--------

• Manitor zeigt jetzt (im Gegensatz zur V1.0) auch den Supervisor-Status
an. Durch ein "S" wird angezeigt, wenn eine Systemfunktion aus dem Supervisor-
Mode heraus aufgerufen wurde.

• Ausgabe des 200Hz-Timers und des Prozeßnamens. Ist der Prozeßname
(noch) nicht bekannt, wird "BP:" und dahinter die Adresse der Basepage
des aktuellen Prozesses ausgegeben.

• Manitor zeichnet bereits alle Aufrufe und Returns aller Schichten
auf. Ausgabe allerdings noch ohne Funktionsnamen und Parameter.
Lediglich die Schicht und die Opcode-Nummer wird ausgegeben.

• Ringpuffer aus Manitor 1.0 nach C++ konvertiert. Nebenbei Bug
in Manitor 1.0 gefunden: Immer beim Übergang vom Ende des Ringpuffers
zum Anfang wurden falsche Daten an den Anfang geschrieben.

• Manitor komplett neu bei Null angefangen. Setzt auf Trapper auf.


============================================================================


Beginn Version 2.0:
------------------

29.1.1999 bis 1.2.1999: Trapper (mit dem CodeWarrior) geschrieben. Das ist
ein Utility, um sich sehr einfach in Systemcalls zu hängen. Man kann sich
beliebig vor und hinter Calls hängen, braucht dazu nicht mal Assembler,
und außerdem ist garantiert, daß man jeden "Return" erwischt.
Die neue Methode ist auch wesentlich schneller und zuverlässiger als die
Methode in Manitor 1.0.

Manitor basiert ab 2.0 auf Trapper. Manitor hängt also nicht mehr selbst
in den Traps, sondern indirekt über Trapper. Manitor ist dadurch schneller,
stabiler und zuverlässiger.
Manitor 2.0 wurde am 1.2.1999 begonnen.

Trapper und Manitor ab V2.0 werden komplett mit dem CodeWarrior entwickelt.
Möglich ist dies durch meinen TOS Linker, an dem ich nebenbei arbeite.

Version 1.0:
-----------

Noch in Pure-C geschrieben. Hängt sich selbst in Traps. Um Returns tracen
zu können, wird ein sehr aufwendiger, umständlicher und langsamer Weg
gewählt. Außerdem ist nicht immer garantiert, daß jeder Return
aufgenommen werden kann und Manitor kann nicht beendet werden, wenn
er gerade "in" einer Funktion festsitzt.
Außerdem kommt es aus unerklärlichen Gründen manchmal zu Abstürzen
(z.B. wenn man den ASH-Emailer tracen will).
Nachdem ich länger nichts an der V1.0 verbessert habe, habe ich sie
im Januar 1999 veröffentlicht (http://www.mani.de/).
